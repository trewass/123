import { NextRequest, NextResponse } from 'next/server'
import nodemailer from 'nodemailer'

// –¢–∏–ø—ã –¥–ª—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
interface ContactFormData {
  name: string
  phone: string
  email: string
  message: string
  source?: string
  page?: string
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—á—Ç—ã
const transporter = nodemailer.createTransporter({
  service: 'gmail', // –∏–ª–∏ 'yandex', 'mail.ru'
  auth: {
    user: process.env.EMAIL_USER, // –≤–∞—à–∞ –ø–æ—á—Ç–∞
    pass: process.env.EMAIL_PASS  // –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  }
})

export async function POST(request: NextRequest) {
  try {
    const data: ContactFormData = await request.json()
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    if (!data.name || !data.phone || !data.email) {
      return NextResponse.json(
        { success: false, message: '–ù–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã' },
        { status: 400 }
      )
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º HTML –ø–∏—Å—å–º–æ
    const htmlContent = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #333; border-bottom: 2px solid #007bff; padding-bottom: 10px;">
          üéâ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞!
        </h2>
        
        <div style="background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <h3 style="color: #007bff; margin-top: 0;">üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ:</h3>
          
          <table style="width: 100%; border-collapse: collapse;">
            <tr>
              <td style="padding: 8px 0; font-weight: bold; color: #555;">–ò–º—è:</td>
              <td style="padding: 8px 0;">${data.name}</td>
            </tr>
            <tr>
              <td style="padding: 8px 0; font-weight: bold; color: #555;">–¢–µ–ª–µ—Ñ–æ–Ω:</td>
              <td style="padding: 8px 0;">
                <a href="tel:${data.phone}" style="color: #007bff; text-decoration: none;">
                  ${data.phone}
                </a>
              </td>
            </tr>
            <tr>
              <td style="padding: 8px 0; font-weight: bold; color: #555;">Email:</td>
              <td style="padding: 8px 0;">
                <a href="mailto:${data.email}" style="color: #007bff; text-decoration: none;">
                  ${data.email}
                </a>
              </td>
            </tr>
            ${data.message ? `
            <tr>
              <td style="padding: 8px 0; font-weight: bold; color: #555;">–°–æ–æ–±—â–µ–Ω–∏–µ:</td>
              <td style="padding: 8px 0;">${data.message}</td>
            </tr>
            ` : ''}
          </table>
        </div>
        
        <div style="background: #e9ecef; padding: 15px; border-radius: 8px; margin: 20px 0;">
          <h4 style="margin-top: 0; color: #6c757d;">üìä –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h4>
          <p style="margin: 5px 0; color: #6c757d;">
            <strong>–ò—Å—Ç–æ—á–Ω–∏–∫:</strong> ${data.source || '–í–µ–±-—Å–∞–π—Ç'}
          </p>
          <p style="margin: 5px 0; color: #6c757d;">
            <strong>–°—Ç—Ä–∞–Ω–∏—Ü–∞:</strong> ${data.page || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
          </p>
          <p style="margin: 5px 0; color: #6c757d;">
            <strong>–î–∞—Ç–∞:</strong> ${new Date().toLocaleString('ru-RU')}
          </p>
        </div>
        
        <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #dee2e6;">
          <p style="color: #6c757d; font-size: 14px;">
            –≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
          </p>
        </div>
      </div>
    `

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏—Å—å–º–∞
    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: process.env.EMAIL_TO || process.env.EMAIL_USER, // –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å
      subject: `üéØ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞: ${data.name} - ${data.phone}`,
      html: htmlContent,
      text: `
–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞!

–ò–º—è: ${data.name}
–¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}
Email: ${data.email}
${data.message ? `–°–æ–æ–±—â–µ–Ω–∏–µ: ${data.message}` : ''}

–ò—Å—Ç–æ—á–Ω–∏–∫: ${data.source || '–í–µ–±-—Å–∞–π—Ç'}
–°—Ç—Ä–∞–Ω–∏—Ü–∞: ${data.page || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
–î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}
      `
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ
    await transporter.sendMail(mailOptions)

    return NextResponse.json({
      success: true,
      message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!'
    })

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏:', error)
    
    return NextResponse.json(
      { 
        success: false, 
        message: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.' 
      },
      { status: 500 }
    )
  }
}
