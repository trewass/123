import { NextRequest, NextResponse } from 'next/server'
import nodemailer from 'nodemailer'

// –¢–∏–ø—ã –¥–ª—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
interface ContactFormData {
  name: string
  phone: string
  email: string
  message: string
  source?: string
  page?: string
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—á—Ç—ã
const transporter = nodemailer.createTransport({
  service: 'yandex',
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS
  }
})

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–µ–º—ã –ø–∏—Å—å–º–∞ –∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
function getEmailInfo(page: string) {
  const pageInfo = {
    '/': {
      subject: 'üè† –ó–∞—è–≤–∫–∞ —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã',
      source: '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞',
      description: '–ö–ª–∏–µ–Ω—Ç –æ—Å—Ç–∞–≤–∏–ª –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ —Ç–µ—Ö–ø—Ä–æ–µ–∫—Ç–æ–≤'
    },
    '/case': {
      subject: 'üìã –ó–∞—è–≤–∫–∞ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–µ–π—Å–æ–≤',
      source: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–µ–π—Å–æ–≤',
      description: '–ö–ª–∏–µ–Ω—Ç –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏'
    },
    '/project-demo': {
      subject: 'üìê –ó–∞—è–≤–∫–∞ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏–º–µ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞',
      source: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–º–µ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞',
      description: '–ö–ª–∏–µ–Ω—Ç —Ö–æ—á–µ—Ç –∑–∞–∫–∞–∑–∞—Ç—å –ø–æ—Ö–æ–∂–∏–π –ø—Ä–æ–µ–∫—Ç'
    },
    '/case/': {
      subject: 'üéØ –ó–∞—è–≤–∫–∞ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–µ–π—Å–∞',
      source: '–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–µ–π—Å–∞',
      description: '–ö–ª–∏–µ–Ω—Ç –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º'
    }
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–¥—Ö–æ–¥—è—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  for (const [path, info] of Object.entries(pageInfo)) {
    if (page.startsWith(path)) {
      return info
    }
  }

  // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
  return {
    subject: 'üìû –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞',
    source: '–í–µ–±-—Å–∞–π—Ç',
    description: '–ö–ª–∏–µ–Ω—Ç –æ—Å—Ç–∞–≤–∏–ª –∑–∞—è–≤–∫—É'
  }
}

export async function POST(request: NextRequest) {
  try {
    const data: ContactFormData = await request.json()
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    if (!data.name || !data.phone) {
      return NextResponse.json(
        { success: false, message: '–ù–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã' },
        { status: 400 }
      )
    }

    const emailInfo = getEmailInfo(data.page || '/')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—á—Ç—ã
    if (!process.env.EMAIL_USER || !process.env.EMAIL_PASS) {
      console.error('–û—à–∏–±–∫–∞: EMAIL_USER –∏–ª–∏ EMAIL_PASS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã')
      return NextResponse.json(
        { success: false, message: '–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—á—Ç—ã' },
        { status: 500 }
      )
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ HTML –ø–∏—Å—å–º–æ
    const htmlContent = `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <style>
          body { font-family: Arial, sans-serif; margin: 0; padding: 0; background-color: #f4f4f4; }
          .container { max-width: 600px; margin: 0 auto; background: white; }
          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; }
          .content { padding: 30px; }
          .info-block { background: #f8f9fa; border-radius: 10px; padding: 20px; margin: 20px 0; }
          .contact-info { background: #e3f2fd; border-left: 4px solid #2196f3; padding: 15px; margin: 20px 0; }
          .footer { background: #f5f5f5; padding: 20px; text-align: center; color: #666; }
          .button { display: inline-block; background: #2196f3; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; }
          .highlight { color: #2196f3; font-weight: bold; }
          .emoji { font-size: 24px; }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <div class="emoji">üéâ</div>
            <h1 style="margin: 10px 0;">–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!</h1>
            <p style="margin: 0; opacity: 0.9;">${emailInfo.description}</p>
          </div>
          
          <div class="content">
            <div class="info-block">
              <h3 style="color: #333; margin-top: 0;">üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ</h3>
              <table style="width: 100%; border-collapse: collapse;">
                <tr>
                  <td style="padding: 8px 0; font-weight: bold; color: #555;">–ò–º—è:</td>
                  <td style="padding: 8px 0; color: #333;">${data.name}</td>
                </tr>
                <tr>
                  <td style="padding: 8px 0; font-weight: bold; color: #555;">–¢–µ–ª–µ—Ñ–æ–Ω:</td>
                  <td style="padding: 8px 0;">
                    <a href="tel:${data.phone}" style="color: #2196f3; text-decoration: none; font-weight: bold;">
                      ${data.phone}
                    </a>
                  </td>
                </tr>
                ${data.email ? `
                <tr>
                  <td style="padding: 8px 0; font-weight: bold; color: #555;">Email:</td>
                  <td style="padding: 8px 0;">
                    <a href="mailto:${data.email}" style="color: #2196f3; text-decoration: none;">
                      ${data.email}
                    </a>
                  </td>
                </tr>
                ` : ''}
                ${data.message ? `
                <tr>
                  <td style="padding: 8px 0; font-weight: bold; color: #555;">–°–æ–æ–±—â–µ–Ω–∏–µ:</td>
                  <td style="padding: 8px 0; color: #333;">${data.message}</td>
                </tr>
                ` : ''}
              </table>
            </div>
            
            <div class="contact-info">
              <h4 style="margin-top: 0; color: #1976d2;">üìä –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
              <p style="margin: 5px 0; color: #333;">
                <strong>–ò—Å—Ç–æ—á–Ω–∏–∫:</strong> <span class="highlight">${emailInfo.source}</span>
              </p>
              <p style="margin: 5px 0; color: #333;">
                <strong>–°—Ç—Ä–∞–Ω–∏—Ü–∞:</strong> <span class="highlight">${data.page || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</span>
              </p>
              <p style="margin: 5px 0; color: #333;">
                <strong>–î–∞—Ç–∞:</strong> <span class="highlight">${new Date().toLocaleString('ru-RU')}</span>
              </p>
            </div>
            
            <div style="text-align: center; margin: 30px 0;">
              <a href="tel:${data.phone}" class="button">üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É</a>
              ${data.email ? `
              <a href="mailto:${data.email}" class="button" style="margin-left: 10px;">‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å email</a>
              ` : ''}
            </div>
          </div>
          
          <div class="footer">
            <p style="margin: 0; font-size: 14px;">
              –≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
            </p>
            <p style="margin: 5px 0; font-size: 12px; opacity: 0.7;">
              –í—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è: ${new Date().toLocaleString('ru-RU')}
            </p>
          </div>
        </div>
      </body>
      </html>
    `

    // –¢–µ–∫—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –ø–∏—Å—å–º–∞
    const textContent = `
–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞!

${emailInfo.description}

–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ö–õ–ò–ï–ù–¢–ï:
–ò–º—è: ${data.name}
–¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}
${data.email ? `Email: ${data.email}` : ''}
${data.message ? `–°–æ–æ–±—â–µ–Ω–∏–µ: ${data.message}` : ''}

–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:
–ò—Å—Ç–æ—á–Ω–∏–∫: ${emailInfo.source}
–°—Ç—Ä–∞–Ω–∏—Ü–∞: ${data.page || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
–î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}

---
–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
    `

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏—Å—å–º–∞
    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: process.env.EMAIL_TO || process.env.EMAIL_USER,
      subject: emailInfo.subject,
      html: htmlContent,
      text: textContent
    }

    console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞:', {
      from: mailOptions.from,
      to: mailOptions.to,
      subject: mailOptions.subject
    })

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ
    const result = await transporter.sendMail(mailOptions)
    console.log('–ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ:', result.messageId)

    return NextResponse.json({
      success: true,
      message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!'
    })

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏:', error)
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—É—é –æ—à–∏–±–∫—É
    let errorMessage = '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
    
    if (error && typeof error === 'object' && 'code' in error) {
      if (error.code === 'EAUTH') {
        errorMessage = '–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ—á—Ç—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ EMAIL_USER –∏ EMAIL_PASS.'
      } else if (error.code === 'ECONNECTION') {
        errorMessage = '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ø–æ—á—Ç–æ–≤–æ–º—É —Å–µ—Ä–≤–µ—Ä—É.'
      }
    }
    
    return NextResponse.json(
      { 
        success: false, 
        message: errorMessage,
        error: process.env.NODE_ENV === 'development' && error instanceof Error ? error.message : undefined
      },
      { status: 500 }
    )
  }
}
